#!/bin/bash
set -e
g_script_name=$(basename "${0}")

if [ -z "${XNAT_PBS_JOBS}" ]; then
	echo "${g_script_name}: ABORTING: XNAT_PBS_JOBS environment variable must be set"
	exit 1
fi

# source the logging related functions
source "${XNAT_PBS_JOBS}/shlib/log.shlib"
log_Msg "XNAT_PBS_JOBS: ${XNAT_PBS_JOBS}"

# source utility functions
source "${XNAT_PBS_JOBS}/shlib/utils.shlib"

usage()
{
	cat <<EOF

Get data from the XNAT archive necessary to run the MultiRunIcaFix processing pipeline
on 7T HCP data.

Usage: ${g_script_name} PARAMETER..."

PARAMETERs are [ ] = optional; < > = user supplied value
  [--help]             : show this usage information and exit with non-zero return code
   --subject=<subject> : XNAT subject ID within project (e.g. 100307)
   --project=<project> : XNAT project (e.g. HCP_1200)
EOF
}

get_options()
{
	local arguments=($@)

	# initialize global output variables
	unset g_subject
	unset g_project

	# parse arguments
	local num_args=${#arguments[@]}
	local argument
	local index=0

	while [ ${index} -lt ${num_args} ]; do
		case ${argument} in
			--help)
				usage
				exit 1
				;;
			--subject=*)
				g_subject=${argument#*=}
				index=$(( index + 1 ))
				;;
			--project=*)
				g_project=${argument#*=}
				index=$(( index + 1 ))
				;;
			*)
				usage
				log_Err_Abort "unrecognized option ${argument}"
				;;
		esac
	done

	local error_count=0

	# check required parameters
	if [ -z "${g_subject}" ]; then
		log_Err "subject (--subject=) required"
		error_count=$(( error_count + 1 ))
	else
		log_Msg "g_subject: ${g_subject}"
	fi

	if [ -z "${g_project}" ]; then
		log_Err "project (--project=) required"
		error_count=$(( error_count + 1 ))
	else
		log_Msg "g_project: ${g_project}"
	fi	

	if [ ${error_count} -gt 0 ]; then
		log_Err_Abort "For usage information, use --help"
	fi
}

main()
{
	show_job_start

	show_platform_info

	get_options "$@"

	# Get/link CinaB-style data
	log_Msg "Activating Python 3"
	source activate python3 2>&1

	log_Msg "Getting CinaB-Style data"
	${XNAT_PBS_JOBS}/lib/hcp/hcp7t/get_cinab_style_data.py





	
	log_Msg "Complete"
}

# Invoke the main to get things started
main "$@"
